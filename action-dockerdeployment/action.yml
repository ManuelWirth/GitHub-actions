name: Deploy Docker to DigitalOcean
description: Deploys a Docker container to DigitalOcean

inputs:
  docker-user:
    description: 'DockerHub username'
    required: true
  docker-password:
    description: 'DockerHub password'
    required: true
  digital-ocean-ip:
    description: 'DigitalOcean droplet IP address'
    required: true
  image-name:
    description: 'Docker image name'
    required: true
  server-host:
    description: 'Server host'
    required: true
  server-username:
    description: 'Server username'
    required: true
  server-password:
    description: 'Server Password'
    required: true
  ssh-port:
    description: 'SSH port'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Login to DockerHub
      run: echo "${{ inputs.docker-password }}" | docker login -u "${{ inputs.docker-user }}" --password-stdin
      shell: bash

    - name: Install sshpass
      run: sudo apt-get install -y sshpass
      shell: bash

    - name: Get Latest Docker Image Tag
      id: get-latest-tag
      run: |
        latest_tag=$(curl -sS "https://registry.hub.docker.com/v2/repositories/manuwirth/repodemo/tags/" | jq -r '.results | map(.name) | .[0]')
        echo "::set-output name=tag::$latest_tag"
      shell: bash

    - name: Deploy via SSH
      uses: appleboy/ssh-action@master
      with:
        host: ${{ inputs.server-host }}
        username: ${{ inputs.server-username }}
        password: ${{ inputs.server-password }}
        port: ${{ inputs.ssh-port }}
        script: |
          docker login -u '${{ inputs.docker-user }}' -p '${{ inputs.docker-password }}' &&
          docker pull manuwirth/repodemo:${{ steps.get-latest-tag.outputs.tag }} &&
          docker stop '${{ inputs.image-name }}' || true &&
          docker rm '${{ inputs.image-name }}' || true &&
          docker rmi '${{ inputs.docker-user }}/${{ inputs.image-name }}:current' || true &&
          docker run -d --restart always --name '${{ inputs.image-name }}' -p 80:80 manuwirth/repodemo:${{ steps.get-latest-tag.outputs.tag }}
